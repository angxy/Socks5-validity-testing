name: Build and Release Proxy Checker

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      # 检出代码
      - name: Checkout code
        uses: actions/checkout@v4

      # 设置 Go 环境
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      # 缓存 Go 模块
      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # 安装依赖
      - name: Install dependencies
        run: go mod download

      # 确保 builds-linux.sh 可执行并运行
      - name: Run builds-linux.sh
        run: |
          chmod +x ./builds-linux.sh
          ./builds-linux.sh aigo.go

      # 创建 GitHub Release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Proxy Checker ${{ github.ref_name }}
          draft: false
          prerelease: false

      # 上传所有二进制文件作为 Release 资产
      - name: Upload Release Assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for asset in builds/*; do
            asset_name=$(basename "$asset")
            curl -X POST \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Content-Type: application/octet-stream" \
              --data-binary "@$asset" \
              "${{ steps.create_release.outputs.upload_url }}?name=$asset_name"
          done
